import Head from "next/head";
import { useState } from "react";
import axios from "axios";
import Heading from "../../components/common/Heading";
import Navbar from "../../components/common/Navbar";
import KeyValueCard from "../../components/common/KeyValueCard";
import TimePeriodDropdown from "../../components/common/TimePeriodDropdown";
import InformationTable from "../../components/tables/InformationTable";
import PieChart from "../../components/charts/PieChart";
import BarChart from "../../components/charts/BarChart";
import LineChart from "../../components/charts/LineChart";
import styles from "../../styles/pages/user/User.module.css";
import {
  formatContestsDataForTable,
  formatProblemsDataForTable,
} from "../../helpers/organization";

const User = ({ userInformation, userContests, userProblems }) => {
  // The time period for which the user wants to view the statistics
  const [timePeriod, setTimePeriod] = useState("all_time");

  return (
    <div className={styles.container}>
      <Head>
        <title>Stats Portal - {userInformation.handle}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <div className={styles.stats_container}>
        {/* Heading */}
        <Heading
          prefixHeading={"statistics for"}
          mainHeading={userInformation.handle}
        />

        {/* User Information Cards */}
        <div className={styles.user_information_container}>
          <KeyValueCard
            cardKey={"User Since"}
            // We obtain the string in this format: "Weekday, Day Month Year"
            cardValue={userInformation["creation_date"]
              .split(" ")
              .splice(0, 4)
              .join(" ")}
            color={"#dc143c"}
          />
          <KeyValueCard
            cardKey={"Rank"}
            cardValue={userInformation["rank"]}
            color={"#2196f3"}
          />
          <KeyValueCard
            cardKey={"Rating"}
            cardValue={userInformation["rating"]}
            color={"#32cd32"}
          />
          <KeyValueCard
            cardKey={"Maximum Rating"}
            cardValue={userInformation["max_rating"]}
            color={"#f39c12"}
          />
        </div>

        <div className={styles.flex_wrap_container}>
          {/* Time Period Select Dropdown */}
          <TimePeriodDropdown
            timePeriod={timePeriod}
            setTimePeriod={setTimePeriod}
          />

          {/* Contests Statistics Table */}
          <div className={styles.half_chart_container}>
            <InformationTable
              title={"Contest Statistics"}
              dataList={[formatContestsDataForTable(userContests[timePeriod])]}
            />
          </div>
          {/* Problems Statistics Table */}
          <div className={styles.half_chart_container}>
            <InformationTable
              title={"Problem Statistics"}
              dataList={[formatProblemsDataForTable(userProblems[timePeriod])]}
            />
          </div>
          {/* Language Distribution Chart */}
          <div className={styles.half_chart_container}>
            <PieChart
              title={`Languages Used by ${userInformation.handle}`}
              donut={true}
              data={userProblems[timePeriod].languages}
              />
          </div>
          {/* Tag Distribution Donut Chart */}
          <div className={styles.half_chart_container}>
            <PieChart
              title={`Problem Tags Solved by ${userInformation.handle}`}
              donut={true}
              data={userProblems[timePeriod].tags}
            />
          </div>
          {/* Index Distribution Bar Chart */}
          <div className={styles.half_chart_container}>
            <BarChart
              title={`Problem Indexes Solved by ${userInformation.handle}`}
              horizontal={false}
              dataList={[
                {
                  name: "Problems Solved",
                  series: userProblems[timePeriod].indexes,
                },
              ]}
              color={"#ff1744"}
            />
          </div>
          {/* Ratings Distribution Bar Chart */}
          <div className={styles.half_chart_container}>
            <BarChart
              title={`Problem Ratings Solved by ${userInformation.handle}`}
              horizontal={false}
              dataList={[
                {
                  name: "Problems Solved",
                  series: userProblems[timePeriod].ratings,
                },
              ]}
              color={"#2196f3"}
            />
          </div>
          {/* Rating History Line Chart */}
          <div className={styles.full_chart_container}>
            <LineChart
              title={`Rating History for ${userInformation.handle}`}
              dataList={[
                {
                  name: "Rating",
                  series: userContests[timePeriod].rating_history,
                },
              ]}
            />
          </div>
        </div>
      </div>
    </div>
  );
};

export default User;

export const getServerSideProps = async (context) => {
  // Extracting handle from URL
  const handle = context.params.handle;

  // The base URL is common to information ("/"), user's contests ("/contests-participated")
  // and user's problems solved ("/problems-solved")
  const baseURL = `http://localhost:5000/users/${handle}`;

  // Getting the required statistics from the backend
  const userInformation = await axios.get(baseURL);
  const userContests = await axios.get(`${baseURL}/contests-participated`);
  const userProblems = await axios.get(`${baseURL}/problems-solved`);

  // Passing in the statistics as props to the page component
  return {
    props: {
      userInformation: await userInformation.data,
      userContests: await userContests.data,
      userProblems: await userProblems.data,
    },
  };
};
