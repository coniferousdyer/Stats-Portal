import Head from "next/head";
import { useState } from "react";
import axios from "axios";
import Heading from "../../components/common/Heading";
import Navbar from "../../components/common/Navbar";
import TimePeriodDropdown from "../../components/common/TimePeriodDropdown";
import InformationTable from "../../components/tables/InformationTable";
import BarChart from "../../components/charts/BarChart";
import LineChart from "../../components/charts/LineChart";
import styles from "../../styles/pages/compare/Compare.module.css";
import {
  formatInformationDataForTable,
  formatContestsDataForTable,
  formatProblemsDataForTable,
} from "../../helpers/organization";

const Compare = ({ usersList }) => {
  // The time period for which the user wants to view the statistics
  const [timePeriod, setTimePeriod] = useState("all_time");

  return (
    <div className={styles.container}>
      <Head>
        {/* Joining all the handles together to form a comma separated string */}
        <title>
          Stats Portal - Compare{" "}
          {usersList.map((user) => user.information.handle).join(", ")}
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <div className={styles.stats_container}>
        {/* Heading */}
        <Heading
          prefixHeading={"comparison between"}
          mainHeading={usersList
            .map((user) => user.information.handle)
            .join(", ")}
        />

        <div className={styles.flex_wrap_container}>
          {/* Time Period Select Dropdown */}
          <TimePeriodDropdown
            timePeriod={timePeriod}
            setTimePeriod={setTimePeriod}
          />

          {/* User Information Comparison Table */}
          <div className={styles.user_information_container}>
            <InformationTable
              dataList={usersList.map((user) =>
                formatInformationDataForTable(user.information)
              )}
            />
          </div>

          {/* Contests Statistics Table */}
          <div className={styles.full_chart_container}>
            <InformationTable
              title={"Contest Statistics"}
              dataList={usersList.map((user) =>
                formatContestsDataForTable(user.contests[timePeriod])
              )}
            />
          </div>
          {/* Problems Statistics Table */}
          <div className={styles.full_chart_container}>
            <InformationTable
              title={"Problem Statistics"}
              dataList={usersList.map((user) =>
                formatProblemsDataForTable(user.problems[timePeriod])
              )}
            />
          </div>
          {/* Problem Tags Comparison Bar Chart */}
          <div className={styles.full_chart_container}>
            <BarChart
              title={"Problem Tags"}
              horizontal={false}
              dataList={usersList.map((user) => {
                return {
                  name: user.information.handle,
                  series: user.problems[timePeriod].tags,
                };
              })}
            />
          </div>
          {/* Problem Indexes Comparison Bar Chart */}
          <div className={styles.full_chart_container}>
            <BarChart
              title={"Problem Indexes"}
              horizontal={false}
              dataList={usersList.map((user) => {
                return {
                  name: user.information.handle,
                  series: user.problems[timePeriod].indexes,
                };
              })}
            />
          </div>
          {/* Problem Ratings Comparison Bar Chart */}
          <div className={styles.full_chart_container}>
            <BarChart
              title={"Problem Ratings"}
              horizontal={false}
              dataList={usersList.map((user) => {
                return {
                  name: user.information.handle,
                  series: user.problems[timePeriod].ratings,
                };
              })}
            />
          </div>
          {/* Rating History Line Chart */}
          <div className={styles.full_chart_container}>
            <LineChart
              title={"Rating History"}
              dataList={usersList.map((user) => {
                return {
                  name: user.information.handle,
                  series: user.contests[timePeriod].rating_history,
                };
              })}
            />
          </div>
        </div>
      </div>
    </div>
  );
};

export default Compare;

export const getServerSideProps = async (context) => {
  // Extracting handles from URL, separated by ";", eg. ?handles="user1;user2;user3"
  const { handles } = context.query;

  // The array of user data
  const users = await Promise.all(
    handles.split(";").map(async (handle) => {
      // The base URL is common to information ("/"), user's contests ("/contests-participated")
      // and user's problems solved ("/problems-solved")
      const baseURL = `http://localhost:5000/users/${handle}`;

      // Getting the required statistics from the backend
      const userInformation = await axios.get(baseURL);
      const userContests = await axios.get(`${baseURL}/contests-participated`);
      const userProblems = await axios.get(`${baseURL}/problems-solved`);

      return {
        information: await userInformation.data,
        contests: await userContests.data,
        problems: await userProblems.data,
      };
    })
  );

  // Passing in the statistics as props to the page component
  return {
    props: {
      usersList: users,
    },
  };
};
